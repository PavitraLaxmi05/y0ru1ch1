[
  
  {
    "title": "WWCTF 2025 writeups",
    "url": "/posts/WWCTF/",
    "categories": "CTF, WWCTF",
    "tags": "WWCTF",
    "date": "2025-06-11 00:00:00 +0530",
    "content": "WWCTF  WWCTF (World Wide Capture The Flag) is an international cybersecurity competition that brings together enthusiasts, students, and professionals to test and enhance their skills in various fields of cybersecurity. It follows the Capture The Flag (CTF) format, where participants solve challenges to capture ‚Äúflags‚Äù ‚Äî pieces of text that prove they‚Äôve solved a problem.  WWCTF includes a wide spectrum of categories such as:  Web Exploitation: Identify flaws in web apps like XSS, SQLi, SSRF, etc.  Pwn: Analyze and exploit binary vulnerabilities (buffer overflows, format strings).  Reverse Engineering: Understand how binaries or software work by deconstructing them.  Cryptography: Break or exploit flawed encryption schemes.  Forensics: Recover data from network traffic, memory dumps, or disk images.  OSINT: Use open-source information to gather clues.  OSINT  Lost 1    Explanation:    I uploaded the provided image to Google Lens, which is great for reverse image searching based on visual similarity.Google Lens quickly matched the scene with images from Sea Panedrom in Nice, Fabron (France).I searched ‚ÄúSea Panedrom, Nice, Fabron‚Äù on Google Maps.The buildings and layout were identical, confirming this was the correct location.Once the correct spot was located, I copied the latitude and longitude.I formatted them as required and submitted them as the flag.  Flag: wwf{43.688,7.236}  Web    In the Domain of Doom challenge, I analyzed the Flask source code and discovered a hidden /flag route that returned the flag from an environment variable. By directly visiting /flag in the browser, I was able to retrieve the flag without needing to bypass input filters or trigger any injections.  Flag: wwf{Command_1nj3ctI0n_l5_c0ol}  Community  Community chalenge    In the Community Challenge, I joined the official Discord server and navigated to the #community-challenge channel. From the pinned messages, I found a YouTube video link. Checking the video‚Äôs comment section, I discovered the flag hidden in one of the top comments ‚Äî solving the challenge by simply exploring the community resources as hinted.  Flag: wwf{tk4nk_y4ll_f0r_p4rtjcjp4tjnq_jn_tk3_ck4ll3nq3} "
  },
  
  {
    "title": "SmileyCTF 2025 writeups",
    "url": "/posts/SmileyCTF/",
    "categories": "CTF, SmileyCTF",
    "tags": "SmileyCTF",
    "date": "2025-06-11 00:00:00 +0530",
    "content": "SmileyCTF 2025  About SmileyCTF: Official URL: https://play.ctf.gg/   SmileyCTF is a well-organized,jeopardy-style Capture The Flag competition hosted by the  American CTF team.Known for its creative challenges and beginner-friendly tone(with a few nasty surprises for veterans),SmileyCTF 2025 did not disappoint! The CTF featured a wide range of categories including Pwn,Crypto,Web,Reversing,Misc,Block chain.  OSINT  SKY    Explanation:    I used Google Lens to scan the image and identified the location as San Diego,USA.After extracting the coordinates,I subbmitted my proof of work and entered the coordinates and successfully obtained the flag.  Flag: .;,;.{g00gl3_ai_th1nks_th3s3_pr0duc3_r3n3w3bl3_3n3rgy_1ma0}  "
  },
  
  {
    "title": "PicoGym web Exploitation- Easy writeups",
    "url": "/posts/PicoCTF/",
    "categories": "CTF, PicoCTF",
    "tags": "picoCTF",
    "date": "2025-06-11 00:00:00 +0530",
    "content": "picoCTF    About picoCTF: picoCTF is a cybersecurity competition for middle and high school students, but it‚Äôs also an amazing playground for anyone new to CTFs. It features a wide variety of challenges in areas like:  Binary Exploitation  Web Exploitation  Forensics  Cryptography  Reverse Engineering  General Skills  Each challenge gives a practical exposure to real-world hacking techniques‚Äîsafely and legally.  This is their Official webpage - https://picoctf.org/  This is their url for picoGym - https://play.picoctf.org/practice  Cookie Monster Secret Recipe   Explanation: After accessing the website, we are greeted with a login page prompting for a username and password. Upon entering random credentials, the login attempt fails. However, an interesting hint is displayed: ‚ÄúCheck the cookie.‚Äù    Inspecting the browser‚Äôs cookies, we notice one that appears to be Base64-encoded. This suggests the application might be storing flag in a way that can be decoded and potentially manipulated.    Finally got the flag,  Flag: picoCTF{c1e_m0nster_l0ves_c00kies_6C2FB7F3}  SSTI   Explanation: After launching website,We identified an SSTI vulnerability by injecting a Jinja2 payload ({{7*7}} ) and confirmed code execution using os.popen. Then, we listed directories, found the flag at /challenge/flag, and read it using a Jinja2-based payload to extract the flag.    Flag: picoCTF{s4rv3r_s1d3_t3mp14t3_1nj3ct10n5_4r3_c001_73c99823}  WebDecode    Explanation: After launching the instance, the website loaded successfully. I began by inspecting the webpage for any hidden elements or clues that might contain the flag. During this inspection, I discovered a suspicious-looking string that appeared to be Base64-encoded.    I copied the encoded text and decoded it using shell. Upon decoding, the hidden message was revealed ‚Äî it was the flag.  Flag: picoCTF{web_succ3ssfully_d3c0ded_10f9376f}  Uniminify    Explanation: After Launching the instance, I began to view sourc code by clicking ctrl+u and then the code is in a single line. After by clicking ctrl+f, I searched for picoCTF and got through all chances and got the flag.  Flag:picoCTF{pr3tty_c0d3_b99eb82e}  Bookmarket    Explanation:  After launching the website, There is javascript code is displayed on the webpage and the flag is encrypted and stored in a variable. The code is given to get the decrypted flag. So I copied the code and executed using vscode and got the real flag.    Flag: picoCTF{p@g3_turn3r_1d1ba7e0}  Inspect HTML    Explanation:  After Launching Instance, The website is loaded. As the challenge name I inspected the website and got the flag in HTML code.    Flag: picoCTF{1n5p3t0r_0f_h7ml_8113f7e2} "
  },
  
  {
    "title": "Welcome to My Blog",
    "url": "/posts/WelcomeToMyBlog/",
    "categories": "blog, cybersecurity",
    "tags": "others",
    "date": "2025-06-11 00:00:00 +0530",
    "content": "Hello and Welcome! üëã  I‚Äôm Pavitralaxmi Pulakhandam, and this is my corner of the internet ‚Äî where cybersecurity meets curiosity.  Here, you‚Äôll find my thoughts, lessons, and experiences as I dive deep into the world of:  üö© Capture The Flag (CTF) Challenges Breakdowns of real challenges, creative exploits, and the logic behind the hacks.  üîê Cybersecurity Concepts &amp; Tools From everyday techniques to powerful tools ‚Äî if I use it or learn it, you‚Äôll read about it here.  üõ† Projects I love building, experimenting, and applying security knowledge to practical use cases. Expect walkthroughs and open-source snippets.  üèÖ Personal Milestones My wins, certifications, collaborations, and proud moments from the ever-evolving infosec journey.    Why This Blog?  The field of cybersecurity is huge and ever-changing. Instead of just keeping notes to myself, I decided to create a space that could:  ‚úÖ Help others navigate similar challenges ‚úÖ Contribute to the global hacker and learner community ‚úÖ Document my personal learning trail and growth    What‚Äôs Next?  I‚Äôll be posting regularly ‚Äî from CTF writeups to exploit techniques, cyber news reactions, and project breakdowns. Whether you‚Äôre a beginner or a seasoned pro, there‚Äôs something for everyone.  Stay curious. Stay ethical. And stay tuned! üî•  Y0RU1CH1 "
  }
  
]

